//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace WMS.Webservice.UDS.RoleWebservice {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RoleWSSoap", Namespace="http://tempuri.org/")]
    public partial class RoleWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllRoleBySystemCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleByUserNameAndSystemNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleByUserNameAndSystemCodeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RoleWS() {
            this.Url = global::WMS.Webservice.Properties.Settings.Default.WMS_Webservice_UDS_RoleWebservice_RoleWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllRoleBySystemCodeCompletedEventHandler GetAllRoleBySystemCodeCompleted;
        
        /// <remarks/>
        public event GetRoleByUserNameAndSystemNameCompletedEventHandler GetRoleByUserNameAndSystemNameCompleted;
        
        /// <remarks/>
        public event GetRoleByUserNameAndSystemCodeCompletedEventHandler GetRoleByUserNameAndSystemCodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRoleBySystemCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] GetAllRoleBySystemCode(string systemCode) {
            object[] results = this.Invoke("GetAllRoleBySystemCode", new object[] {
                        systemCode});
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRoleBySystemCodeAsync(string systemCode) {
            this.GetAllRoleBySystemCodeAsync(systemCode, null);
        }
        
        /// <remarks/>
        public void GetAllRoleBySystemCodeAsync(string systemCode, object userState) {
            if ((this.GetAllRoleBySystemCodeOperationCompleted == null)) {
                this.GetAllRoleBySystemCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRoleBySystemCodeOperationCompleted);
            }
            this.InvokeAsync("GetAllRoleBySystemCode", new object[] {
                        systemCode}, this.GetAllRoleBySystemCodeOperationCompleted, userState);
        }
        
        private void OnGetAllRoleBySystemCodeOperationCompleted(object arg) {
            if ((this.GetAllRoleBySystemCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRoleBySystemCodeCompleted(this, new GetAllRoleBySystemCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoleByUserNameAndSystemName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] GetRoleByUserNameAndSystemName(string username, string systemName) {
            object[] results = this.Invoke("GetRoleByUserNameAndSystemName", new object[] {
                        username,
                        systemName});
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleByUserNameAndSystemNameAsync(string username, string systemName) {
            this.GetRoleByUserNameAndSystemNameAsync(username, systemName, null);
        }
        
        /// <remarks/>
        public void GetRoleByUserNameAndSystemNameAsync(string username, string systemName, object userState) {
            if ((this.GetRoleByUserNameAndSystemNameOperationCompleted == null)) {
                this.GetRoleByUserNameAndSystemNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleByUserNameAndSystemNameOperationCompleted);
            }
            this.InvokeAsync("GetRoleByUserNameAndSystemName", new object[] {
                        username,
                        systemName}, this.GetRoleByUserNameAndSystemNameOperationCompleted, userState);
        }
        
        private void OnGetRoleByUserNameAndSystemNameOperationCompleted(object arg) {
            if ((this.GetRoleByUserNameAndSystemNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleByUserNameAndSystemNameCompleted(this, new GetRoleByUserNameAndSystemNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoleByUserNameAndSystemCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] GetRoleByUserNameAndSystemCode(string username, string systemCode) {
            object[] results = this.Invoke("GetRoleByUserNameAndSystemCode", new object[] {
                        username,
                        systemCode});
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleByUserNameAndSystemCodeAsync(string username, string systemCode) {
            this.GetRoleByUserNameAndSystemCodeAsync(username, systemCode, null);
        }
        
        /// <remarks/>
        public void GetRoleByUserNameAndSystemCodeAsync(string username, string systemCode, object userState) {
            if ((this.GetRoleByUserNameAndSystemCodeOperationCompleted == null)) {
                this.GetRoleByUserNameAndSystemCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleByUserNameAndSystemCodeOperationCompleted);
            }
            this.InvokeAsync("GetRoleByUserNameAndSystemCode", new object[] {
                        username,
                        systemCode}, this.GetRoleByUserNameAndSystemCodeOperationCompleted, userState);
        }
        
        private void OnGetRoleByUserNameAndSystemCodeOperationCompleted(object arg) {
            if ((this.GetRoleByUserNameAndSystemCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleByUserNameAndSystemCodeCompleted(this, new GetRoleByUserNameAndSystemCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Role {
        
        private string systemNameField;
        
        private int systemIDField;
        
        private int roleIDField;
        
        private string systemCodeField;
        
        private string roleCodeField;
        
        private string roleNameField;
        
        private string roleDescriptionField;
        
        private int accessTypeField;
        
        private bool activeField;
        
        private string dateCreatedField;
        
        private string createdByField;
        
        private string dateModifiedField;
        
        private string modifiedByField;
        
        private int rowsField;
        
        /// <remarks/>
        public string SystemName {
            get {
                return this.systemNameField;
            }
            set {
                this.systemNameField = value;
            }
        }
        
        /// <remarks/>
        public int SystemID {
            get {
                return this.systemIDField;
            }
            set {
                this.systemIDField = value;
            }
        }
        
        /// <remarks/>
        public int RoleID {
            get {
                return this.roleIDField;
            }
            set {
                this.roleIDField = value;
            }
        }
        
        /// <remarks/>
        public string SystemCode {
            get {
                return this.systemCodeField;
            }
            set {
                this.systemCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RoleCode {
            get {
                return this.roleCodeField;
            }
            set {
                this.roleCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
        
        /// <remarks/>
        public string RoleDescription {
            get {
                return this.roleDescriptionField;
            }
            set {
                this.roleDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int AccessType {
            get {
                return this.accessTypeField;
            }
            set {
                this.accessTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public string DateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedBy {
            get {
                return this.modifiedByField;
            }
            set {
                this.modifiedByField = value;
            }
        }
        
        /// <remarks/>
        public int Rows {
            get {
                return this.rowsField;
            }
            set {
                this.rowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAllRoleBySystemCodeCompletedEventHandler(object sender, GetAllRoleBySystemCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRoleBySystemCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRoleBySystemCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRoleByUserNameAndSystemNameCompletedEventHandler(object sender, GetRoleByUserNameAndSystemNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleByUserNameAndSystemNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleByUserNameAndSystemNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRoleByUserNameAndSystemCodeCompletedEventHandler(object sender, GetRoleByUserNameAndSystemCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleByUserNameAndSystemCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleByUserNameAndSystemCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591